import esbuildSvelte from "esbuild-svelte";
import sveltePreprocess from "svelte-preprocess";
import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { performance } from 'perf_hooks';

// Add global objects that might be missing in the build environment
global.window = {};
global.performance = performance;

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	plugins: [
		esbuildSvelte({
			compilerOptions: { 
				css: true,
				hydratable: true
			},
			preprocess: sveltePreprocess({
				sourceMap: !prod
			}),
		}),
	],
	define: {
		'global.performance': 'performance',
		'global.window': 'window'
	}
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}